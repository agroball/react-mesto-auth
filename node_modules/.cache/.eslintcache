[{"/home/timakov/react-mesto-auth/src/index.js":"1","/home/timakov/react-mesto-auth/src/components/App.js":"2","/home/timakov/react-mesto-auth/src/components/Login.js":"3","/home/timakov/react-mesto-auth/src/components/Header.js":"4","/home/timakov/react-mesto-auth/src/components/Footer.js":"5","/home/timakov/react-mesto-auth/src/components/Main.js":"6","/home/timakov/react-mesto-auth/src/components/PopupWithForm.js":"7","/home/timakov/react-mesto-auth/src/components/ImagePopup.js":"8","/home/timakov/react-mesto-auth/src/utils/api.js":"9","/home/timakov/react-mesto-auth/src/components/AddPlacePopup.js":"10","/home/timakov/react-mesto-auth/src/components/EditAvatarPopup.js":"11","/home/timakov/react-mesto-auth/src/components/EditProfilePopup.js":"12","/home/timakov/react-mesto-auth/src/contexts/CurrentUserContext.js":"13","/home/timakov/react-mesto-auth/src/components/Card.js":"14","/home/timakov/react-mesto-auth/src/components/InputForm.js":"15","/home/timakov/react-mesto-auth/src/components/Register.js":"16","/home/timakov/react-mesto-auth/src/components/ProtectedRoute.js":"17","/home/timakov/react-mesto-auth/src/components/InfoToolTip.js":"18","/home/timakov/react-mesto-auth/src/utils/auth.js":"19"},{"size":343,"mtime":1620908567102,"results":"20","hashOfConfig":"21"},{"size":8490,"mtime":1621062564643,"results":"22","hashOfConfig":"21"},{"size":1168,"mtime":1621028946974,"results":"23","hashOfConfig":"21"},{"size":957,"mtime":1621070126287,"results":"24","hashOfConfig":"21"},{"size":199,"mtime":1620738249068,"results":"25","hashOfConfig":"21"},{"size":1697,"mtime":1620738249068,"results":"26","hashOfConfig":"21"},{"size":916,"mtime":1620738249068,"results":"27","hashOfConfig":"21"},{"size":770,"mtime":1620738249068,"results":"28","hashOfConfig":"21"},{"size":3338,"mtime":1620738249068,"results":"29","hashOfConfig":"21"},{"size":1216,"mtime":1620738249068,"results":"30","hashOfConfig":"21"},{"size":937,"mtime":1620738249068,"results":"31","hashOfConfig":"21"},{"size":1992,"mtime":1620738249068,"results":"32","hashOfConfig":"21"},{"size":83,"mtime":1620738249068,"results":"33","hashOfConfig":"21"},{"size":1409,"mtime":1620738249068,"results":"34","hashOfConfig":"21"},{"size":1387,"mtime":1620909041529,"results":"35","hashOfConfig":"21"},{"size":1375,"mtime":1621028977466,"results":"36","hashOfConfig":"21"},{"size":447,"mtime":1621062564651,"results":"37","hashOfConfig":"21"},{"size":495,"mtime":1621030420557,"results":"38","hashOfConfig":"21"},{"size":1349,"mtime":1621029352806,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"3jspl2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/timakov/react-mesto-auth/src/index.js",[],["81","82"],"/home/timakov/react-mesto-auth/src/components/App.js",["83","84","85","86","87","88","89","90","91"],"import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport * as Auth from '../utils/auth';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\n    const [isSuccessPopupOpen, setIsSuccessPopupOpen] = React.useState(false);\n    const [isFailPopupOpen, setIsFailPopupOpen] = React.useState(false);\n\n\n\n\n    React.useEffect(() => {\n        const promises = [api.getUserInfo(), api.getInitialCards()];\n        Promise.all(promises)\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(){\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleSuccessPopupClick() {\n        setIsSuccessPopupOpen(true);\n    }\n\n    function handleFailPopupClick() {\n        setIsFailPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsPopupWithImageOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('' );\n        setIsPopupWithImageOpen(false);\n    }\n\n    function handleLikeClick(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                // Обновляем стейт\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card){\n        api.deleteCard(card._id)\n            .then((newCard)=> {\n                const newCards = cards.filter((c) =>\n                    c._id === card._id ? \"\" : newCard\n                );\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser({name, about}) {\n        return api.setUserInfo(name, about)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateAvatarImage(data)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n\n    // Регистрация\n    // function registration(email, password) {\n    //     Auth.register(escapeHtml(email), password).then((res) => {\n    //         if(res.status === 201){\n    //             handleInfoTooltipContent({iconPath: registrationOk, text: 'Вы успешно зарегистрировались!'})\n    //             handleInfoTooltipPopupOpen();\n    //             // Перенаправляем на страницу логина спустя 3сек и закрываем попап\n    //             setTimeout(history.push, 3000, \"/sign-in\");\n    //             setTimeout(closeAllPopups, 2500);\n    //         }\n    //         if(res.status === 400) {\n    //             console.log('Введный емейл ужезарегестрирован')\n    //         }\n    //     }).catch((err)=> {\n    //         handleInfoTooltipContent({iconPath: registrationNoOK, text: 'Что-то пошло не так! Попробуйте ещё раз.'})\n    //         handleInfoTooltipPopupOpen();\n    //         setTimeout(closeAllPopups, 2500);\n    //         console.log(err)\n    //     })\n    // }\n    // // Авторизация\n    // function authorization(email, password) {\n    //     Auth.authorize(escapeHtml(email), password )\n    //         .then((data) => {\n    //             if (!data) {\n    //                 throw new Error('Произошла ошибка');\n    //             }\n    //             Auth.getContent(data)\n    //                 .then((res) => {\n    //                     setEmail(res.data.email);\n    //                 }).catch(err => console.log(err));\n    //             setLoggedIn(true);\n    //             handleInfoTooltipContent({iconPath: registrationOk, text: 'Вы успешно авторизовались!'})\n    //             handleInfoTooltipPopupOpen();\n    //             // Перенаправляем на главную страницу спустя 3сек и закрываем попап\n    //             setTimeout(history.push, 3000, \"/\");\n    //             setTimeout(closeAllPopups, 2500);\n    //         }).catch((err) => {\n    //         handleInfoTooltipContent({iconPath: registrationNoOK, text: 'Что то пошло не так!'})\n    //         handleInfoTooltipPopupOpen();\n    //         console.log(err)\n    //     })\n    // }\n\n\n\n\n\n\n\n\n\n\n    return (\n<>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header/>\n        <Switch>\n            {currentUser && <ProtectedRoute\n                exact path=\"/\"\n                component={Main}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleLikeClick}\n                onCardDelete={handleDeleteClick}\n            />}\n            <Route path=\"/sign-in\">\n                <Login\n\n                />\n            </Route>\n            <Route path=\"/sign-up\">\n                <Register\n\n                />\n            </Route>\n        </Switch>\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n\n          <PopupWithForm name=\"agreePopup\"\n                         title=\"Вы уверены?\"\n                         button=\"Да\">\n          </PopupWithForm>\n\n\n          <ImagePopup\n              card={selectedCard}\n              isOpen={isPopupWithImageOpen}\n              onClose={closeAllPopups}\n          >\n          </ImagePopup>\n    </CurrentUserContext.Provider>\n</>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/timakov/react-mesto-auth/src/components/Login.js",[],"/home/timakov/react-mesto-auth/src/components/Header.js",[],"/home/timakov/react-mesto-auth/src/components/Footer.js",[],"/home/timakov/react-mesto-auth/src/components/Main.js",[],"/home/timakov/react-mesto-auth/src/components/PopupWithForm.js",[],"/home/timakov/react-mesto-auth/src/components/ImagePopup.js",[],"/home/timakov/react-mesto-auth/src/utils/api.js",[],"/home/timakov/react-mesto-auth/src/components/AddPlacePopup.js",[],"/home/timakov/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/home/timakov/react-mesto-auth/src/components/EditProfilePopup.js",[],"/home/timakov/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/home/timakov/react-mesto-auth/src/components/Card.js",[],"/home/timakov/react-mesto-auth/src/components/InputForm.js",[],["92","93"],"/home/timakov/react-mesto-auth/src/components/Register.js",[],"/home/timakov/react-mesto-auth/src/components/ProtectedRoute.js",[],"/home/timakov/react-mesto-auth/src/components/InfoToolTip.js",[],"/home/timakov/react-mesto-auth/src/utils/auth.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":11,"column":13,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":18,"column":25,"nodeType":"100","messageId":"101","endLine":18,"endColumn":33},{"ruleId":"98","severity":1,"message":"105","line":18,"column":35,"nodeType":"100","messageId":"101","endLine":18,"endColumn":45},{"ruleId":"98","severity":1,"message":"106","line":30,"column":12,"nodeType":"100","messageId":"101","endLine":30,"endColumn":30},{"ruleId":"98","severity":1,"message":"107","line":31,"column":12,"nodeType":"100","messageId":"101","endLine":31,"endColumn":27},{"ruleId":"98","severity":1,"message":"108","line":60,"column":14,"nodeType":"100","messageId":"101","endLine":60,"endColumn":37},{"ruleId":"98","severity":1,"message":"109","line":64,"column":14,"nodeType":"100","messageId":"101","endLine":64,"endColumn":34},{"ruleId":"94","replacedBy":"110"},{"ruleId":"96","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'InfoToolTip' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'isSuccessPopupOpen' is assigned a value but never used.","'isFailPopupOpen' is assigned a value but never used.","'handleSuccessPopupClick' is defined but never used.","'handleFailPopupClick' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]