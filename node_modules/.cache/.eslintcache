[{"D:\\dev\\react-mesto-auth\\src\\index.js":"1","D:\\dev\\react-mesto-auth\\src\\components\\App.js":"2","D:\\dev\\react-mesto-auth\\src\\components\\Header.js":"3","D:\\dev\\react-mesto-auth\\src\\components\\Main.js":"4","D:\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js":"5","D:\\dev\\react-mesto-auth\\src\\components\\Login.js":"6","D:\\dev\\react-mesto-auth\\src\\components\\Footer.js":"7","D:\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js":"8","D:\\dev\\react-mesto-auth\\src\\utils\\api.js":"9","D:\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"10","D:\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"11","D:\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js":"12","D:\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"13","D:\\dev\\react-mesto-auth\\src\\components\\Register.js":"14","D:\\dev\\react-mesto-auth\\src\\components\\InfoToolTip.js":"15","D:\\dev\\react-mesto-auth\\src\\utils\\auth.js":"16","D:\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"17","D:\\dev\\react-mesto-auth\\src\\components\\Card.js":"18"},{"size":358,"mtime":1621151681617,"results":"19","hashOfConfig":"20"},{"size":10091,"mtime":1621152508862,"results":"21","hashOfConfig":"20"},{"size":980,"mtime":1621151681607,"results":"22","hashOfConfig":"20"},{"size":1709,"mtime":1621151681609,"results":"23","hashOfConfig":"20"},{"size":944,"mtime":1621151681609,"results":"24","hashOfConfig":"20"},{"size":1200,"mtime":1621151681609,"results":"25","hashOfConfig":"20"},{"size":206,"mtime":1621151681607,"results":"26","hashOfConfig":"20"},{"size":790,"mtime":1621151681608,"results":"27","hashOfConfig":"20"},{"size":3470,"mtime":1621151681618,"results":"28","hashOfConfig":"20"},{"size":2043,"mtime":1621151681606,"results":"29","hashOfConfig":"20"},{"size":963,"mtime":1621151681606,"results":"30","hashOfConfig":"20"},{"size":1252,"mtime":1621151681582,"results":"31","hashOfConfig":"20"},{"size":464,"mtime":1621151681609,"results":"32","hashOfConfig":"20"},{"size":1410,"mtime":1621151681610,"results":"33","hashOfConfig":"20"},{"size":732,"mtime":1621151681608,"results":"34","hashOfConfig":"20"},{"size":1395,"mtime":1621151681618,"results":"35","hashOfConfig":"20"},{"size":84,"mtime":1621151681610,"results":"36","hashOfConfig":"20"},{"size":1449,"mtime":1621151681606,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"divxv9",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\react-mesto-auth\\src\\index.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\App.js",["76","77"],"import '../index.css';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Login from './Login.js';\r\nimport Register from './Register';\r\nimport Footer from './Footer.js';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport api from '../utils/api.js';\r\nimport * as Auth from '../utils/auth';\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoToolTip\";\r\nimport React from \"react\";\r\nimport RegOk from '../images/registration-ok.svg';\r\nimport RegNoOK from '../images/login-fail.svg';\r\nimport { Route, Switch, Redirect, withRouter, useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState({});\r\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\r\n    const [cards, setCards] = React.useState([]);\r\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\r\n    const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\r\n    const [loggedIn, setLoggedIn] = React.useState(false);\r\n    const [message, setMessage] = React.useState({ iconPath: '', text: '' });\r\n    const [email, setEmail] = React.useState('');\r\n    const history = useHistory();\r\n\r\n    React.useEffect(() => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        if (jwt) {\r\n            Auth.getContent(jwt)\r\n                .then((res) => {\r\n                    setLoggedIn(true);\r\n                    setEmail(res.data.email);\r\n                    history.push('/');\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        const promises = [api.getUserInfo(), api.getInitialCards()];\r\n        Promise.all(promises)\r\n            .then(([user, cards]) => {\r\n                setCurrentUser(user);\r\n                setCards(cards);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick(){\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleInfoTooltipPopupOpen() {\r\n        setIsInfoTooltipPopupOpen(true);\r\n    }\r\n    function handleInfoTooltipContent({iconPath, text}) {\r\n        setMessage({ iconPath: iconPath, text: text })\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n        setIsPopupWithImageOpen(true);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setSelectedCard('' );\r\n        setIsPopupWithImageOpen(false);\r\n        setIsInfoTooltipPopupOpen(false);\r\n    }\r\n\r\n    function handleLikeClick(card) {\r\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        api.changeLikeCardStatus(card._id, !isLiked)\r\n            .then((newCard) => {\r\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n                // Обновляем стейт\r\n                setCards(newCards);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    function handleDeleteClick(card){\r\n        api.deleteCard(card._id)\r\n            .then((newCard)=> {\r\n                const newCards = cards.filter((c) =>\r\n                    c._id === card._id ? \"\" : newCard\r\n                );\r\n                setCards(newCards);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    function handleUpdateUser({name, about}) {\r\n        return api.setUserInfo(name, about)\r\n            .then((result) => {\r\n                setCurrentUser(result);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    function handleUpdateAvatar(data) {\r\n        api.updateAvatarImage(data)\r\n            .then((result) => {\r\n                setCurrentUser(result);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    function handleAddPlaceSubmit({name, link}) {\r\n        api.addCard(name, link)\r\n            .then((newCard) => {\r\n                setCards([newCard, ...cards]);\r\n                closeAllPopups();\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Регистрация\r\n    function registration(email, password) {\r\n        Auth.register(email, password).then((res) => {\r\n            if(res.status === 201){\r\n                handleInfoTooltipContent({iconPath: RegOk, text: 'Вы успешно зарегистрировались!'})\r\n                handleInfoTooltipPopupOpen();\r\n                // Перенаправляем на страницу логина спустя 3сек и закрываем попап\r\n                setTimeout(history.push, 3000, \"/sign-in\");\r\n                setTimeout(closeAllPopups, 2500);\r\n            }\r\n            if(res.status === 400) {\r\n                console.log('Введный емейл ужезарегестрирован')\r\n            }\r\n        }).catch((err)=> {\r\n            handleInfoTooltipContent({iconPath: RegNoOK, text: 'Что-то пошло не так! Попробуйте ещё раз.'})\r\n            handleInfoTooltipPopupOpen();\r\n            setTimeout(closeAllPopups, 2500);\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    // Авторизация\r\n    function authorization(email, password) {\r\n        Auth.authorize(email, password )\r\n            .then((data) => {\r\n                if (!data) {\r\n                    throw new Error('Произошла ошибка');\r\n                }\r\n                Auth.getContent(data)\r\n                    .then((res) => {\r\n                        setEmail(res.data.email);\r\n                    }).catch(err => console.log(err));\r\n                setLoggedIn(true);\r\n                handleInfoTooltipContent({iconPath: RegOk, text: 'Вы успешно авторизовались!'})\r\n                handleInfoTooltipPopupOpen();\r\n                // Перенаправляем на главную страницу спустя 3сек и закрываем попап\r\n                setTimeout(history.push, 3000, \"/\");\r\n                setTimeout(closeAllPopups, 2500);\r\n            }).catch((err) => {\r\n            handleInfoTooltipContent({iconPath: RegNoOK, text: 'Что то пошло не так! Попробуйте еще раз!'})\r\n            handleInfoTooltipPopupOpen();\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    // Выход из учетки\r\n    function handleSignOut() {\r\n        setLoggedIn(false);\r\n        localStorage.removeItem('jwt');\r\n        setEmail('');\r\n        history.push('/sign-in');\r\n    }\r\n\r\n    return (\r\n<>\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header loggedIn={loggedIn} email={email} handleSignOut={handleSignOut}/>\r\n        <Switch>\r\n            {currentUser && <ProtectedRoute\r\n                exact path=\"/\"\r\n                loggedIn={loggedIn}\r\n                component={Main}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cards}\r\n                onCardLike={handleLikeClick}\r\n                onCardDelete={handleDeleteClick}\r\n            />}\r\n            <Route path=\"/sign-in\">\r\n                <Login\r\n                    authorization={authorization}\r\n                />\r\n            </Route>\r\n            <Route path=\"/sign-up\">\r\n                <Register\r\n                    registration={registration}\r\n                />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n            </Route>\r\n        </Switch>\r\n        <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n          <PopupWithForm name=\"agreePopup\"\r\n                         title=\"Вы уверены?\"\r\n                         button=\"Да\">\r\n          </PopupWithForm>\r\n\r\n\r\n          <ImagePopup\r\n              card={selectedCard}\r\n              isOpen={isPopupWithImageOpen}\r\n              onClose={closeAllPopups}\r\n          >\r\n          </ImagePopup>\r\n        {currentUser &&\r\n        <InfoTooltip\r\n            isOpen={isInfoTooltipPopupOpen}\r\n            onClose={closeAllPopups}\r\n            message={message}\r\n        />\r\n        }\r\n    </CurrentUserContext.Provider>\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\dev\\react-mesto-auth\\src\\components\\Header.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\Main.js",["78"],"import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n\r\n\r\n\r\n    return ( <div className=\"main\" >\r\n        <section className=\"profile\" >\r\n        <div className=\"profile__header\" >\r\n        <div className=\"profile__avatar-container\" >\r\n        <img className=\"profile__avatar\"\r\n             src={currentUser.avatar}\r\n        />\r\n        <button className=\"profile__avatar-button\" onClick={props.onEditAvatar}/>\r\n        </div>\r\n            <div className=\"profile__info\" >\r\n        <div className=\"profile__line\" >\r\n        <h1 className=\"profile__title\" > {currentUser.name} </h1>\r\n            <button className=\"profile__editbutton\"\r\n        type=\"button\"\r\n        onClick={props.onEditProfile}\r\n        />\r\n        </div>\r\n                <p className=\"profile__paragraph\" > {currentUser.about} </p>\r\n            </div>\r\n        </div>\r\n            <button className=\"profile__addbutton\"\r\n        type=\"button\"\r\n        onClick={props.onAddPlace}\r\n        />\r\n        </section>\r\n\r\n            <section className=\"elements\" >\r\n                {props.cards.map((card) => (\r\n                <Card\r\n                    key={card._id}\r\n                    link={card.link}\r\n                    name={card.name}\r\n                    likes={card.likes}\r\n                    onCardClick={props.onCardClick}\r\n                    card={card}\r\n                    onCardLike={props.onCardLike}\r\n                    onCardDelete={props.onCardDelete}\r\n                />\r\n            ))}\r\n\r\n    </section>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Main;","D:\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\Login.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\Footer.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js",[],"D:\\dev\\react-mesto-auth\\src\\utils\\api.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\Register.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\InfoToolTip.js",[],"D:\\dev\\react-mesto-auth\\src\\utils\\auth.js",[],"D:\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],"D:\\dev\\react-mesto-auth\\src\\components\\Card.js",[],{"ruleId":"79","severity":1,"message":"80","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":20,"column":35,"nodeType":"81","messageId":"82","endLine":20,"endColumn":45},{"ruleId":"84","severity":1,"message":"85","line":15,"column":9,"nodeType":"86","endLine":17,"endColumn":11},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]