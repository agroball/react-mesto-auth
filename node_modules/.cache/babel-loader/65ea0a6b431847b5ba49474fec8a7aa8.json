{"ast":null,"code":"var _jsxFileName = \"/home/timakov/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport * as Auth from '../utils/auth';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoToolTip\";\nimport React from \"react\";\nimport RegOk from \"../images/registration-ok.svg\";\nimport RegNoOK from \"../images/login-fail.svg\";\nimport { Route, Switch, Redirect, withRouter, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [message, setMessage] = React.useState({\n    iconPath: '',\n    text: ''\n  });\n  const [email, setEmail] = React.useState('');\n  const history = useHistory();\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      Auth.getContent(jwt).then(res => {\n        setLoggedIn(true);\n        setEmail(res.data.email);\n        history.push('/');\n      }).catch(err => console.log(err));\n    }\n  }, [history]);\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n    Promise.all(promises).then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleInfoTooltipPopupOpen() {\n    setIsInfoTooltipPopupOpen(true);\n  }\n\n  function handleInfoTooltipContent({\n    iconPath,\n    text\n  }) {\n    setMessage({\n      iconPath: iconPath,\n      text: text\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPopupWithImageOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n    setIsPopupWithImageOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n  }\n\n  function handleLikeClick(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleDeleteClick(card) {\n    api.deleteCard(card._id).then(newCard => {\n      const newCards = cards.filter(c => c._id === card._id ? \"\" : newCard);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    return api.setUserInfo(name, about).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatarImage(data).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } // Регистрация\n\n\n  function registration(email, password) {\n    Auth.register(email, password).then(res => {\n      if (res.status === 201) {\n        handleInfoTooltipContent({\n          iconPath: RegOk,\n          text: 'Вы успешно зарегистрировались!'\n        });\n        handleInfoTooltipPopupOpen(); // Перенаправляем на страницу логина спустя 3сек и закрываем попап\n\n        setTimeout(history.push, 3000, \"/sign-in\");\n        setTimeout(closeAllPopups, 2500);\n      }\n\n      if (res.status === 400) {\n        console.log('Введный емейл ужезарегестрирован');\n      }\n    }).catch(err => {\n      handleInfoTooltipContent({\n        iconPath: RegNoOK,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      handleInfoTooltipPopupOpen();\n      setTimeout(closeAllPopups, 2500);\n      console.log(err);\n    });\n  } // Авторизация\n\n\n  function authorization(email, password) {\n    Auth.authorize(email, password).then(data => {\n      if (!data) {\n        throw new Error('Произошла ошибка');\n      }\n\n      Auth.getContent(data).then(res => {\n        setEmail(res.data.email);\n      }).catch(err => console.log(err));\n      setLoggedIn(true);\n      handleInfoTooltipContent({\n        iconPath: RegOk,\n        text: 'Вы успешно авторизовались!'\n      });\n      handleInfoTooltipPopupOpen(); // Перенаправляем на главную страницу спустя 3сек и закрываем попап\n\n      setTimeout(history.push, 3000, \"/\");\n      setTimeout(closeAllPopups, 2500);\n    }).catch(err => {\n      handleInfoTooltipContent({\n        iconPath: RegNoOK,\n        text: 'Что то пошло не так!'\n      });\n      handleInfoTooltipPopupOpen();\n      console.log(err);\n    });\n  } // Выход из учетки\n\n\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/sign-in');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [currentUser && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleLikeClick,\n          onCardDelete: handleDeleteClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            authorization: authorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            registration: registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"agreePopup\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isPopupWithImageOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closeAllPopups,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"TrSqW+e44Lz6NOf9pAInnib5WgQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Login","Register","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","Auth","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","InfoTooltip","React","Route","Switch","Redirect","withRouter","useHistory","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","isPopupWithImageOpen","setIsPopupWithImageOpen","cards","setCards","currentUser","setCurrentUser","name","about","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","loggedIn","setLoggedIn","message","setMessage","iconPath","text","email","setEmail","history","useEffect","jwt","localStorage","getItem","getContent","then","res","data","push","catch","err","console","log","promises","getUserInfo","getInitialCards","Promise","all","user","error","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleInfoTooltipPopupOpen","handleInfoTooltipContent","handleCardClick","card","closeAllPopups","handleLikeClick","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleDeleteClick","deleteCard","filter","handleUpdateUser","setUserInfo","result","handleUpdateAvatar","updateAvatarImage","handleAddPlaceSubmit","link","addCard","registration","password","register","status","RegOk","setTimeout","RegNoOK","authorization","authorize","Error","handleSignOut","removeItem"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport * as Auth from '../utils/auth';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoToolTip\";\nimport React from \"react\";\nimport RegOk from '../images/registration-ok.svg';\nimport RegNoOK from '../images/login-fail.svg';\nimport { Route, Switch, Redirect, withRouter, useHistory } from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\n    const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [message, setMessage] = React.useState({ iconPath: '', text: '' });\n    const [email, setEmail] = React.useState('');\n    const history = useHistory();\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.getContent(jwt)\n                .then((res) => {\n                    setLoggedIn(true);\n                    setEmail(res.data.email);\n                    history.push('/');\n                })\n                .catch(err => console.log(err));\n        }\n    }, [history]);\n\n\n    React.useEffect(() => {\n        const promises = [api.getUserInfo(), api.getInitialCards()];\n        Promise.all(promises)\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(){\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleInfoTooltipPopupOpen() {\n        setIsInfoTooltipPopupOpen(true);\n    }\n    function handleInfoTooltipContent({iconPath, text}) {\n        setMessage({ iconPath: iconPath, text: text })\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsPopupWithImageOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('' );\n        setIsPopupWithImageOpen(false);\n        setIsInfoTooltipPopupOpen(false);\n    }\n\n    function handleLikeClick(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                // Обновляем стейт\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card){\n        api.deleteCard(card._id)\n            .then((newCard)=> {\n                const newCards = cards.filter((c) =>\n                    c._id === card._id ? \"\" : newCard\n                );\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser({name, about}) {\n        return api.setUserInfo(name, about)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateAvatarImage(data)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n\n    // Регистрация\n\n    function registration(email, password) {\n        Auth.register(email, password).then((res) => {\n            if(res.status === 201){\n                handleInfoTooltipContent({iconPath: RegOk, text: 'Вы успешно зарегистрировались!'})\n                handleInfoTooltipPopupOpen();\n                // Перенаправляем на страницу логина спустя 3сек и закрываем попап\n                setTimeout(history.push, 3000, \"/sign-in\");\n                setTimeout(closeAllPopups, 2500);\n            }\n            if(res.status === 400) {\n                console.log('Введный емейл ужезарегестрирован')\n            }\n        }).catch((err)=> {\n            handleInfoTooltipContent({iconPath: RegNoOK, text: 'Что-то пошло не так! Попробуйте ещё раз.'})\n            handleInfoTooltipPopupOpen();\n            setTimeout(closeAllPopups, 2500);\n            console.log(err)\n        })\n    }\n    // Авторизация\n\n    function authorization(email, password) {\n        Auth.authorize(email, password )\n            .then((data) => {\n                if (!data) {\n                    throw new Error('Произошла ошибка');\n                }\n                Auth.getContent(data)\n                    .then((res) => {\n                        setEmail(res.data.email);\n                    }).catch(err => console.log(err));\n                setLoggedIn(true);\n                handleInfoTooltipContent({iconPath: RegOk, text: 'Вы успешно авторизовались!'})\n                handleInfoTooltipPopupOpen();\n                // Перенаправляем на главную страницу спустя 3сек и закрываем попап\n                setTimeout(history.push, 3000, \"/\");\n                setTimeout(closeAllPopups, 2500);\n            }).catch((err) => {\n            handleInfoTooltipContent({iconPath: RegNoOK, text: 'Что то пошло не так!'})\n            handleInfoTooltipPopupOpen();\n            console.log(err)\n        })\n    }\n\n    // Выход из учетки\n    function handleSignOut() {\n        setLoggedIn(false);\n        localStorage.removeItem('jwt');\n        setEmail('');\n        history.push('/sign-in');\n    }\n\n    return (\n<>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header/>\n        <Switch>\n            {currentUser && <ProtectedRoute\n                exact path=\"/\"\n                component={Main}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleLikeClick}\n                onCardDelete={handleDeleteClick}\n            />}\n            <Route path=\"/sign-in\">\n                <Login\n                    authorization={authorization}\n                />\n            </Route>\n            <Route path=\"/sign-up\">\n                <Register\n                    registration={registration}\n                />\n            </Route>\n            <Route path=\"/\">\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n        </Switch>\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n\n          <PopupWithForm name=\"agreePopup\"\n                         title=\"Вы уверены?\"\n                         button=\"Да\">\n          </PopupWithForm>\n\n\n          <ImagePopup\n              card={selectedCard}\n              isOpen={isPopupWithImageOpen}\n              onClose={closeAllPopups}\n          >\n          </ImagePopup>\n        {currentUser &&\n        <InfoTooltip\n            isOpen={isInfoTooltipPopupOpen}\n            onClose={closeAllPopups}\n            message={message}\n        />\n        }\n    </CurrentUserContext.Provider>\n</>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}