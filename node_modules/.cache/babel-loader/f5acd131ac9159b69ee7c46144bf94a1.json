{"ast":null,"code":"var _jsxFileName = \"/home/timakov/react-mesto-auth/src/components/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputForm(props) {\n  _s();\n\n  const [error, setError] = React.useState('');\n  /*контроль пробелов в инпуте + считывание его значения*/\n\n  function handleChange(e) {\n    props.onChange(e);\n    /*если значение инпута после применения трима содержит менее 2х символов + отсутствует сообщение об ошибке => вывести ошибку*/\n\n    if (e.target.value.trim().length < 2 && e.target.validationMessage === '') {\n      setError('Слово должно содержать как минимум 2 символа помимо пробелов.');\n    } else {\n      setError(e.target.validationMessage);\n    }\n  }\n  /*очистка спанов от ошибок*/\n\n\n  React.useEffect(() => {\n    if (!props.isOpen) {\n      setError('');\n    }\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup__input_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: props.ref,\n      value: props.value,\n      onChange: handleChange,\n      className: props.className,\n      id: props.id,\n      type: props.type,\n      minLength: props.minLength,\n      maxLength: props.maxLength,\n      placeholder: props.placeholder,\n      name: props.name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputForm, \"AzAS/3yAg/YB9dPSCQtp4rtni54=\");\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/components/InputForm.js"],"names":["React","InputForm","props","error","setError","useState","handleChange","e","onChange","target","value","trim","length","validationMessage","useEffect","isOpen","ref","className","id","type","minLength","maxLength","placeholder","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;AAEA;;AACA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBL,IAAAA,KAAK,CAACM,QAAN,CAAeD,CAAf;AACA;;AACA,QAAIA,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,MAAtB,GAA+B,CAA/B,IAAoCL,CAAC,CAACE,MAAF,CAASI,iBAAT,KAA+B,EAAvE,EAA2E;AACvET,MAAAA,QAAQ,CAAC,+DAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASI,iBAAV,CAAR;AACH;AACJ;AAED;;;AACAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,QAAI,CAACZ,KAAK,CAACa,MAAX,EAAmB;AAAEX,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAAc;AACtC,GAFD,EAEG,CAACF,KAAK,CAACa,MAAP,CAFH;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEb,KAAK,CAACc,GAAlB;AAAuB,MAAA,KAAK,EAAEd,KAAK,CAACQ,KAApC;AAA2C,MAAA,QAAQ,EAAEJ,YAArD;AAAmE,MAAA,SAAS,EAAEJ,KAAK,CAACe,SAApF;AAA+F,MAAA,EAAE,EAAEf,KAAK,CAACgB,EAAzG;AAA6G,MAAA,IAAI,EAAEhB,KAAK,CAACiB,IAAzH;AAA+H,MAAA,SAAS,EAAEjB,KAAK,CAACkB,SAAhJ;AAA2J,MAAA,SAAS,EAAElB,KAAK,CAACmB,SAA5K;AAAuL,MAAA,WAAW,EAAEnB,KAAK,CAACoB,WAA1M;AAAuN,MAAA,IAAI,EAAEpB,KAAK,CAACqB,IAAnO;AAAyO,MAAA,QAAQ;AAAjP;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAgCpB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzBQF,S;;KAAAA,S;AA2BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nfunction InputForm(props) {\n    const [error, setError] = React.useState('');\n\n    /*контроль пробелов в инпуте + считывание его значения*/\n    function handleChange(e) {\n        props.onChange(e);\n        /*если значение инпута после применения трима содержит менее 2х символов + отсутствует сообщение об ошибке => вывести ошибку*/\n        if (e.target.value.trim().length < 2 && e.target.validationMessage === '') {\n            setError('Слово должно содержать как минимум 2 символа помимо пробелов.');\n        } else {\n            setError(e.target.validationMessage);\n        }\n    }\n\n    /*очистка спанов от ошибок*/\n    React.useEffect(() => {\n        if (!props.isOpen) { setError('') }\n    }, [props.isOpen])\n\n    return (\n        <div className=\"popup__input_wrapper\">\n            <input ref={props.ref} value={props.value} onChange={handleChange} className={props.className} id={props.id} type={props.type} minLength={props.minLength} maxLength={props.maxLength} placeholder={props.placeholder} name={props.name} required/>\n            <span className=\"popup__error\">{error}</span>\n        </div>\n    );\n}\n\nexport default InputForm;"]},"metadata":{},"sourceType":"module"}