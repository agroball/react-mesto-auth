{"ast":null,"code":"var _jsxFileName = \"/home/timakov/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n    Promise.all(promises).then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPopupWithImageOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n    setIsPopupWithImageOpen(false);\n  }\n\n  function handleLikeClick(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleDeleteClick(card) {\n    api.deleteCard(card._id).then(newCard => {\n      const newCards = cards.filter(c => c._id === card._id ? \"\" : newCard);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    return api.setUserInfo(name, about).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatarImage(data).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Main, {\n          exact: true,\n          path: \"/\",\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleLikeClick,\n          onCardDelete: handleDeleteClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"agreePopup\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isPopupWithImageOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"76EI/7e3scMQVI1JIbQ52qyYqTQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Login","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","React","Route","Switch","Redirect","withRouter","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","isPopupWithImageOpen","setIsPopupWithImageOpen","cards","setCards","currentUser","setCurrentUser","name","about","useEffect","promises","getUserInfo","getInitialCards","Promise","all","then","user","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","handleLikeClick","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","err","handleDeleteClick","deleteCard","filter","handleUpdateUser","setUserInfo","result","handleUpdateAvatar","data","updateAvatarImage","handleAddPlaceSubmit","link","addCard"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\n\n\n\n\n    React.useEffect(() => {\n        const promises = [api.getUserInfo(), api.getInitialCards()];\n        Promise.all(promises)\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(){\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsPopupWithImageOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('' );\n        setIsPopupWithImageOpen(false);\n    }\n\n    function handleLikeClick(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                // Обновляем стейт\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card){\n        api.deleteCard(card._id)\n            .then((newCard)=> {\n                const newCards = cards.filter((c) =>\n                    c._id === card._id ? \"\" : newCard\n                );\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser({name, about}) {\n        return api.setUserInfo(name, about)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateAvatarImage(data)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n\n    return (\n<>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header/>\n        <Switch>\n            <Main\n                exact path=\"/\"\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleLikeClick}\n                onCardDelete={handleDeleteClick}\n            />\n            <Route exact path=\"/sign-up\">\n               <Login/>\n            </Route>\n            <Route exact path=\"/sign-in\">\n\n            </Route>\n        </Switch>\n        {/*{loggenIn && <Footer/>}*/}\n        <Footer/>\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n\n\n\n          <PopupWithForm name=\"agreePopup\"\n                         title=\"Вы уверены?\"\n                         button=\"Да\">\n          </PopupWithForm>\n\n\n          <ImagePopup\n              card={selectedCard}\n              isOpen={isPopupWithImageOpen}\n              onClose={closeAllPopups}\n          >\n          </ImagePopup>\n    </CurrentUserContext.Provider>\n</>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}