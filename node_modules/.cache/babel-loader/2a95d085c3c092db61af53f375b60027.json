{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){if(res.status===400){throw new Error('Не все поля заполнены');}else if(res.status===401){throw new Error('Email не зарегистрирован');}else return res.json();}).then(function(data){console.log(data);if(data.token){localStorage.setItem('jwt',data.token);return data.token;}});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","authorize","then","res","status","Error","json","data","console","log","token","localStorage","setItem","getContent"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CALyB,CAAvB,CAAZ,CAOH,CARM,CAUP,MAAO,IAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACR,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFsB,CAI/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAJyB,CAAvB,CAAL,CAMFQ,IANE,CAMG,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,uBAAV,CAAN,CACH,CAFD,IAEO,IAAIF,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CAC3B,KAAM,IAAIC,CAAAA,KAAJ,CAAU,0BAAV,CAAN,CACH,CAFM,IAEA,OAAOF,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACV,CAZE,EAaFJ,IAbE,CAaG,SAACK,IAAD,CAAU,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAIA,IAAI,CAACG,KAAT,CAAgB,CACZC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BL,IAAI,CAACG,KAAjC,EACA,MAAOH,CAAAA,IAAI,CAACG,KAAZ,CACH,CACJ,CAnBE,CAAP,CAoBH,CArBM,CAuBP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,KAAD,CAAW,CAAC,MAAOf,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACvEK,MAAM,CAAE,KAD+D,CAEvEC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2Ba,KAA3B,CAFK,CAF8D,CAAzB,CAAL,CAOxCR,IAPwC,CAOnC,SAACC,GAAD,CAAS,CACX,MAAOA,CAAAA,GAAG,CAACG,IAAJ,EAAP,CACH,CATwC,EAUxCJ,IAVwC,CAUnC,SAACK,IAAD,QAAUA,CAAAA,IAAV,EAVmC,CAAP,CAWrC,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    })\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then((res) => {\n            if (res.status === 400) {\n                throw new Error('Не все поля заполнены');\n            } else if (res.status === 401) {\n                throw new Error('Email не зарегистрирован');\n            } else return res.json();\n        })\n        .then((data) => {\n            console.log(data)\n            if (data.token) {\n                localStorage.setItem('jwt', data.token);\n                return data.token;\n            }\n        })\n}\n\nexport const getContent = (token) => {return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n    },\n})\n    .then((res) => {\n        return res.json()\n    })\n    .then((data) => data)\n}"]},"metadata":{},"sourceType":"module"}