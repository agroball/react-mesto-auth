{"ast":null,"code":"export class Api {\n  constructor(options) {\n    this.headers = options.headers;\n    this.baseUrl = options.baseUrl;\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  setUserInfo(newName, newAbout) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: newName,\n        about: newAbout\n      })\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  updateAvatarImage(data) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify(data)\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResult).catch(this._showError);\n  }\n\n  _checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  _showError(err) {\n    console.log(err);\n    return Promise.reject(err);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.addLike(cardId);\n    } else {\n      return this.removeLike(cardId);\n    }\n  }\n\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n  headers: {\n    authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84',\n    'Content-type': 'application/json'\n  }\n});\nexport default api; // fetch('https://mesto.nomoreparties.co/v1/cohort-20/cards', {\n//         headers: {\n//             authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84'\n//         }\n//     })\n//     .then(res => res.json())\n//     .then((result) => {\n//         console.log(result);\n//     });","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","headers","baseUrl","getInitialCards","fetch","then","_checkResult","catch","_showError","getUserInfo","method","setUserInfo","newName","newAbout","body","JSON","stringify","name","about","updateAvatarImage","data","addCard","link","deleteCard","cardId","addLike","removeLike","res","ok","json","Promise","reject","status","err","console","log","changeLikeCardStatus","isLiked","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n    constructor(options) {\n        this.headers = options.headers;\n        this.baseUrl = options.baseUrl;\n    }\n\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n                headers: this.headers\n            })\n            .then(this._checkResult)\n            .catch(this._showError)\n    }\n\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n                method: 'GET',\n                headers: this.headers\n            })\n            .then(this._checkResult)\n            .catch(this._showError)\n    }\n\n    setUserInfo(newName, newAbout) {\n        return fetch(`${this.baseUrl}/users/me`, {\n                method: \"PATCH\",\n                headers: this.headers,\n                body: JSON.stringify({\n                    name: newName,\n                    about: newAbout\n                })\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n\n    updateAvatarImage(data) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n                method: 'PATCH',\n                headers: this.headers,\n                body: JSON.stringify(data)\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n\n    addCard(name, link) {\n        return fetch(`${this.baseUrl}/cards`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify({\n                    name: name,\n                    link: link\n                })\n\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n\n    addLike(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers,\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n    removeLike(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n\n            })\n            .then(this._checkResult)\n            .catch(this._showError);\n    }\n\n    _checkResult(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    };\n\n    _showError(err) {\n        console.log(err);\n        return Promise.reject(err);\n    };\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.addLike(cardId)\n        } else {\n            return this.removeLike(cardId)\n        }\n    };\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n    headers: {\n        authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84',\n        'Content-type': 'application/json'\n    }\n});\n\nexport default api;\n\n\n\n\n// fetch('https://mesto.nomoreparties.co/v1/cohort-20/cards', {\n//         headers: {\n//             authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84'\n//         }\n//     })\n//     .then(res => res.json())\n//     .then((result) => {\n//         console.log(result);\n//     });"]},"metadata":{},"sourceType":"module"}