{"ast":null,"code":"var _jsxFileName = \"/home/timakov/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [isSuccessPopupOpen, setIsSuccessPopupOpen] = React.useState(false);\n  const [isFailPopupOpen, setIsFailPopupOpen] = React.useState(false);\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n    Promise.all(promises).then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleSuccessPopupClick() {\n    setIsSuccessPopupOpen(true);\n  }\n\n  function handleFailPopupClick() {\n    setIsFailPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPopupWithImageOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n    setIsPopupWithImageOpen(false);\n  }\n\n  function handleLikeClick(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleDeleteClick(card) {\n    api.deleteCard(card._id).then(newCard => {\n      const newCards = cards.filter(c => c._id === card._id ? \"\" : newCard);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    return api.setUserInfo(name, about).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatarImage(data).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  /*авторизация пользователя*/\n\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password).then(res => {\n      localStorage.setItem('token', res.token);\n      setEmail(email);\n      setLoggedIn(true);\n      setExit(true);\n      props.history.push('/');\n    }).catch(err => {\n      handleFailPopupClick();\n      console.log(err);\n    });\n  }\n  /*регистрация пользователя*/\n\n\n  function handleRegister(email, password) {\n    auth.register(email, password).then(res => {\n      handleSuccessPopupClick();\n      props.history.push('/sign-in');\n    }).catch(err => {\n      handleFailPopupClick();\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: \"exact\",\n          path: \"/\",\n          component: Main,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleLikeClick,\n          onCardDelete: handleDeleteClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        isOpen: isSuccessPopupOpen,\n        onClose: closeAllPopups,\n        title: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        isOpen: isFailPopupOpen,\n        onClose: closeAllPopups,\n        title: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"agreePopup\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isPopupWithImageOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"QDdaaW51QHu62QkYe6EeTs3SesQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Login","Register","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","React","Route","Switch","Redirect","withRouter","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","isPopupWithImageOpen","setIsPopupWithImageOpen","cards","setCards","currentUser","setCurrentUser","name","about","isSuccessPopupOpen","setIsSuccessPopupOpen","isFailPopupOpen","setIsFailPopupOpen","useEffect","promises","getUserInfo","getInitialCards","Promise","all","then","user","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleSuccessPopupClick","handleFailPopupClick","handleCardClick","card","closeAllPopups","handleLikeClick","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","err","handleDeleteClick","deleteCard","filter","handleUpdateUser","setUserInfo","result","handleUpdateAvatar","data","updateAvatarImage","handleAddPlaceSubmit","link","addCard","handleLogin","email","password","auth","authorize","res","localStorage","setItem","token","setEmail","setLoggedIn","setExit","props","history","push","handleRegister","register"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\n    const [isSuccessPopupOpen, setIsSuccessPopupOpen] = React.useState(false);\n    const [isFailPopupOpen, setIsFailPopupOpen] = React.useState(false);\n\n\n\n\n    React.useEffect(() => {\n        const promises = [api.getUserInfo(), api.getInitialCards()];\n        Promise.all(promises)\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(){\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleSuccessPopupClick() {\n        setIsSuccessPopupOpen(true);\n    }\n\n    function handleFailPopupClick() {\n        setIsFailPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsPopupWithImageOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('' );\n        setIsPopupWithImageOpen(false);\n    }\n\n    function handleLikeClick(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                // Обновляем стейт\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card){\n        api.deleteCard(card._id)\n            .then((newCard)=> {\n                const newCards = cards.filter((c) =>\n                    c._id === card._id ? \"\" : newCard\n                );\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser({name, about}) {\n        return api.setUserInfo(name, about)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateAvatarImage(data)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n\n    /*авторизация пользователя*/\n    function handleLogin(email, password) {\n        auth.authorize(email, password)\n            .then((res) => {\n                localStorage.setItem('token', res.token);\n                setEmail(email);\n                setLoggedIn(true);\n                setExit(true);\n                props.history.push('/');\n            })\n            .catch((err) => {\n                    handleFailPopupClick();\n                    console.log(err)\n                }\n            );\n    }\n    /*регистрация пользователя*/\n    function handleRegister(email, password) {\n        auth.register(email, password)\n            .then((res) => {\n                handleSuccessPopupClick();\n                props.history.push('/sign-in');\n            })\n            .catch((err) => {\n                    handleFailPopupClick();\n                    console.log(err)\n                }\n            );\n    }\n\n\n    return (\n<>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header/>\n        <Switch>\n            <ProtectedRoute\n                exact=\"exact\"\n                path=\"/\"\n                component={Main}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleLikeClick}\n                onCardDelete={handleDeleteClick}\n            />\n            <Route exact path=\"/sign-up\">\n               <Login/>\n            </Route>\n            <Route exact path=\"/sign-in\">\n                <Register/>\n            </Route>\n        </Switch>\n        {/*{loggenIn && <Footer/>}*/}\n        <Footer/>\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <InfoToolTip\n            isOpen={isSuccessPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Вы успешно зарегистрировались!\"\n        />\n        <InfoToolTip\n            isOpen={isFailPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Что-то пошло не так!Попробуйте ещё раз.\"\n        />\n\n\n          <PopupWithForm name=\"agreePopup\"\n                         title=\"Вы уверены?\"\n                         button=\"Да\">\n          </PopupWithForm>\n\n\n          <ImagePopup\n              card={selectedCard}\n              isOpen={isPopupWithImageOpen}\n              onClose={closeAllPopups}\n          >\n          </ImagePopup>\n    </CurrentUserContext.Provider>\n</>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}