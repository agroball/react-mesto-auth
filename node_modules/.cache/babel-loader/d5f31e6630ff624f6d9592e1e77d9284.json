{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    if (res.status === 400) {\n      throw new Error('Не все поля заполнены');\n    } else if (res.status === 401) {\n      throw new Error('Email не зарегистрирован');\n    } else return res.json();\n  }).then(data => {\n    console.log(data);\n\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data.token;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).then(data => data);\n};","map":{"version":3,"sources":["D:/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","authorize","then","res","status","Error","json","data","console","log","token","localStorage","setItem","getContent"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AALyB,GAAvB,CAAZ;AAOH,CARM;AAUP,OAAO,MAAMO,SAAS,GAAG,CAACR,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFsB;AAI/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAJyB,GAAvB,CAAL,CAMFQ,IANE,CAMIC,GAAD,IAAS;AACX,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH,KAFD,MAEO,IAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAC3B,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH,KAFM,MAEA,OAAOF,GAAG,CAACG,IAAJ,EAAP;AACV,GAZE,EAaFJ,IAbE,CAaIK,IAAD,IAAU;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAI,CAACG,KAAT,EAAgB;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BL,IAAI,CAACG,KAAjC;AACA,aAAOH,IAAI,CAACG,KAAZ;AACH;AACJ,GAnBE,CAAP;AAoBH,CArBM;AAuBP,OAAO,MAAMG,UAAU,GAAIH,KAAD,IAAW;AAAC,SAAOf,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACvEK,IAAAA,MAAM,EAAE,KAD+D;AAEvEC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASa,KAAM;AAF5B;AAF8D,GAAzB,CAAL,CAOxCR,IAPwC,CAOlCC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GATwC,EAUxCJ,IAVwC,CAUlCK,IAAD,IAAUA,IAVyB,CAAP;AAWrC,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    })\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then((res) => {\r\n            if (res.status === 400) {\r\n                throw new Error('Не все поля заполнены');\r\n            } else if (res.status === 401) {\r\n                throw new Error('Email не зарегистрирован');\r\n            } else return res.json();\r\n        })\r\n        .then((data) => {\r\n            console.log(data)\r\n            if (data.token) {\r\n                localStorage.setItem('jwt', data.token);\r\n                return data.token;\r\n            }\r\n        })\r\n}\r\n\r\nexport const getContent = (token) => {return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n    },\r\n})\r\n    .then((res) => {\r\n        return res.json()\r\n    })\r\n    .then((data) => data)\r\n}"]},"metadata":{},"sourceType":"module"}