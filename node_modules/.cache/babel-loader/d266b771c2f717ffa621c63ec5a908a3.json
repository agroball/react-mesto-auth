{"ast":null,"code":"var _jsxFileName = \"/home/timakov/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport * as Auth from '../utils/auth';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: ''\n  });\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n    Promise.all(promises).then(([user, cards]) => {\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleInfoTooltipPopupOpen() {\n    setIsInfoTooltipPopupOpen(true);\n  }\n\n  function handleInfoTooltipContent({\n    iconPath,\n    text\n  }) {\n    setMessage({\n      iconPath: iconPath,\n      text: text\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPopupWithImageOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard('');\n    setIsPopupWithImageOpen(false);\n  }\n\n  function handleLikeClick(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleDeleteClick(card) {\n    api.deleteCard(card._id).then(newCard => {\n      const newCards = cards.filter(c => c._id === card._id ? \"\" : newCard);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    return api.setUserInfo(name, about).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateAvatarImage(data).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } // Регистрация\n\n\n  function registration(email, password) {\n    Auth.register(email, password).then(res => {\n      if (res.status === 201) {\n        handleInfoTooltipContent({\n          iconPath: registrationOk,\n          text: 'Вы успешно зарегистрировались!'\n        });\n        handleInfoTooltipPopupOpen(); // Перенаправляем на страницу логина спустя 3сек и закрываем попап\n\n        setTimeout(history.push, 3000, \"/sign-in\");\n        setTimeout(closeAllPopups, 2500);\n      }\n\n      if (res.status === 400) {\n        console.log('Введный емейл ужезарегестрирован');\n      }\n    }).catch(err => {\n      handleInfoTooltipContent({\n        iconPath: registrationNoOK,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      handleInfoTooltipPopupOpen();\n      setTimeout(closeAllPopups, 2500);\n      console.log(err);\n    });\n  } // Авторизация\n\n\n  function authorization(email, password) {\n    Auth.authorize(email, password).then(data => {\n      if (!data) {\n        throw new Error('Произошла ошибка');\n      }\n\n      Auth.getContent(data).then(res => {\n        setEmail(res.data.email);\n      }).catch(err => console.log(err));\n      setLoggedIn(true);\n      handleInfoTooltipContent({\n        iconPath: registrationOk,\n        text: 'Вы успешно авторизовались!'\n      });\n      handleInfoTooltipPopupOpen(); // Перенаправляем на главную страницу спустя 3сек и закрываем попап\n\n      setTimeout(history.push, 3000, \"/\");\n      setTimeout(closeAllPopups, 2500);\n    }).catch(err => {\n      handleInfoTooltipContent({\n        iconPath: registrationNoOK,\n        text: 'Что то пошло не так!'\n      });\n      handleInfoTooltipPopupOpen();\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [currentUser && /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleLikeClick,\n          onCardDelete: handleDeleteClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            authorization: authorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            registration: registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"agreePopup\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isPopupWithImageOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), currentUser && /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closeAllPopups,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ca2ItD6U+6URF60uSR6VHSG+sUs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Login","Register","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","Auth","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","InfoToolTip","React","Route","Switch","Redirect","withRouter","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","isPopupWithImageOpen","setIsPopupWithImageOpen","cards","setCards","currentUser","setCurrentUser","name","about","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","useEffect","promises","getUserInfo","getInitialCards","Promise","all","then","user","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleInfoTooltipPopupOpen","handleInfoTooltipContent","iconPath","text","setMessage","handleCardClick","card","closeAllPopups","handleLikeClick","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","err","handleDeleteClick","deleteCard","filter","handleUpdateUser","setUserInfo","result","handleUpdateAvatar","data","updateAvatarImage","handleAddPlaceSubmit","link","addCard","registration","email","password","register","res","status","registrationOk","setTimeout","history","push","registrationNoOK","authorization","authorize","Error","getContent","setEmail","setLoggedIn","message"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api.js';\nimport * as Auth from '../utils/auth';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoToolTip from \"./InfoToolTip\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isPopupWithImageOpen, setIsPopupWithImageOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: ''});\n    const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n\n\n\n\n    React.useEffect(() => {\n        const promises = [api.getUserInfo(), api.getInitialCards()];\n        Promise.all(promises)\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(){\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleInfoTooltipPopupOpen() {\n        setIsInfoTooltipPopupOpen(true);\n    }\n    function handleInfoTooltipContent({iconPath, text}) {\n        setMessage({ iconPath: iconPath, text: text })\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsPopupWithImageOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('' );\n        setIsPopupWithImageOpen(false);\n    }\n\n    function handleLikeClick(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                // Обновляем стейт\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card){\n        api.deleteCard(card._id)\n            .then((newCard)=> {\n                const newCards = cards.filter((c) =>\n                    c._id === card._id ? \"\" : newCard\n                );\n                setCards(newCards);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser({name, about}) {\n        return api.setUserInfo(name, about)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateAvatarImage(data)\n            .then((result) => {\n                setCurrentUser(result);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.addCard(name, link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n\n    // Регистрация\n\n    function registration(email, password) {\n        Auth.register(email, password).then((res) => {\n            if(res.status === 201){\n                handleInfoTooltipContent({iconPath: registrationOk, text: 'Вы успешно зарегистрировались!'})\n                handleInfoTooltipPopupOpen();\n                // Перенаправляем на страницу логина спустя 3сек и закрываем попап\n                setTimeout(history.push, 3000, \"/sign-in\");\n                setTimeout(closeAllPopups, 2500);\n            }\n            if(res.status === 400) {\n                console.log('Введный емейл ужезарегестрирован')\n            }\n        }).catch((err)=> {\n            handleInfoTooltipContent({iconPath: registrationNoOK, text: 'Что-то пошло не так! Попробуйте ещё раз.'})\n            handleInfoTooltipPopupOpen();\n            setTimeout(closeAllPopups, 2500);\n            console.log(err)\n        })\n    }\n    // Авторизация\n\n    function authorization(email, password) {\n        Auth.authorize(email, password )\n            .then((data) => {\n                if (!data) {\n                    throw new Error('Произошла ошибка');\n                }\n                Auth.getContent(data)\n                    .then((res) => {\n                        setEmail(res.data.email);\n                    }).catch(err => console.log(err));\n                setLoggedIn(true);\n                handleInfoTooltipContent({iconPath: registrationOk, text: 'Вы успешно авторизовались!'})\n                handleInfoTooltipPopupOpen();\n                // Перенаправляем на главную страницу спустя 3сек и закрываем попап\n                setTimeout(history.push, 3000, \"/\");\n                setTimeout(closeAllPopups, 2500);\n            }).catch((err) => {\n            handleInfoTooltipContent({iconPath: registrationNoOK, text: 'Что то пошло не так!'})\n            handleInfoTooltipPopupOpen();\n            console.log(err)\n        })\n    }\n\n    return (\n<>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header/>\n        <Switch>\n            {currentUser && <ProtectedRoute\n                exact path=\"/\"\n                component={Main}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleLikeClick}\n                onCardDelete={handleDeleteClick}\n            />}\n            <Route path=\"/sign-in\">\n                <Login\n                    authorization={authorization}\n                />\n            </Route>\n            <Route path=\"/sign-up\">\n                <Register\n                    registration={registration}\n                />\n            </Route>\n        </Switch>\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n\n          <PopupWithForm name=\"agreePopup\"\n                         title=\"Вы уверены?\"\n                         button=\"Да\">\n          </PopupWithForm>\n\n\n          <ImagePopup\n              card={selectedCard}\n              isOpen={isPopupWithImageOpen}\n              onClose={closeAllPopups}\n          >\n          </ImagePopup>\n        {currentUser &&\n        <InfoTooltip\n            isOpen={isInfoTooltipPopupOpen}\n            onClose={closeAllPopups}\n            message={message}\n        />\n        }\n    </CurrentUserContext.Provider>\n</>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}