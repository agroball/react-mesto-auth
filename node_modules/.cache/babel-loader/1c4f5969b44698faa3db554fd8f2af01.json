{"ast":null,"code":"var _jsxFileName = \"/home/timakov/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  } // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      id: \"name\",\n      name: \"name\",\n      onChange: handleNameChange,\n      type: \"text\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      className: \"form__name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"name-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: description,\n      id: \"job\",\n      name: \"description\",\n      onChange: handleAboutChange,\n      type: \"text\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      className: \"form__name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"job-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"WlxPwiqX56tHi/xw5m3aUoyAzNQ=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/home/timakov/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleNameChange","e","target","value","handleAboutChange","handleSubmit","preventDefault","onUpdateUser","about","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,kBAAjB,CAApB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;;AAGA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AACD,WAASC,iBAAT,CAA2BH,CAA3B,EAA8B;AAC1BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACK,cAAF,GAFqB,CAGrB;;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmB;AAAEZ,MAAAA,IAAI,EAAEA,IAAR;AAAca,MAAAA,KAAK,EAAEV;AAArB,KAAnB;AACH,GAlB4B,CAoB7B;AACJ;;;AACIV,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBb,IAAAA,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACN,WAAW,CAACe,KAAb,CAAd;AACH,GAHD,EAGG,CAACf,WAAD,EAAcD,KAAK,CAACkB,MAApB,CAHH;AAMA,sBACI,QAAC,aAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,2HAFV;AAGI,IAAA,MAAM,EAAC,wDAHX;AAII,IAAA,QAAQ,EAAEL,YAJd;AAKI,IAAA,MAAM,EAAEb,KAAK,CAACkB,MALlB;AAMI,IAAA,OAAO,EAAElB,KAAK,CAACmB,OANnB;AAAA,4BAQI;AAAO,MAAA,KAAK,EAAEhB,IAAd;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,QAAQ,EAAEK,gBAApD;AAAsE,MAAA,IAAI,EAAC,MAA3E;AAAkF,MAAA,SAAS,EAAC,GAA5F;AAAgG,MAAA,SAAS,EAAC,IAA1G;AAA+G,MAAA,SAAS,EAAC,YAAzH;AAAsI,MAAA,QAAQ;AAA9I;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAO,MAAA,KAAK,EAAEF,WAAd;AAA2B,MAAA,EAAE,EAAC,KAA9B;AAAoC,MAAA,IAAI,EAAC,aAAzC;AAAuD,MAAA,QAAQ,EAAEM,iBAAjE;AAAoF,MAAA,IAAI,EAAC,MAAzF;AAAgG,MAAA,SAAS,EAAC,GAA1G;AAA8G,MAAA,SAAS,EAAC,KAAxH;AAA8H,MAAA,SAAS,EAAC,YAAxI;AAAqJ,MAAA,QAAQ;AAA7J;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA7CQb,gB;;KAAAA,gB;AA+CT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState(\"\");\n    const [description, setDescription] = React.useState(\"\");\n\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n    function handleAboutChange(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({ name: name, about: description});\n    }\n\n    // После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            button=\"Сохранить\"\n            onSubmit={handleSubmit}\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n        >\n            <input value={name} id=\"name\" name=\"name\" onChange={handleNameChange} type=\"text\" minLength=\"2\" maxLength=\"40\" className=\"form__name\" required/>\n            <span id=\"name-error\" className=\"error\"/>\n            <input value={description} id=\"job\" name=\"description\" onChange={handleAboutChange} type=\"text\" minLength=\"2\" maxLength=\"200\" className=\"form__name\" required/>\n            <span id=\"job-error\" className=\"error\"/>\n        </PopupWithForm>\n\n    );\n\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}