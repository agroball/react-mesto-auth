{"ast":null,"code":"import _classCallCheck from\"/home/timakov/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/timakov/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.headers=options.headers;this.baseUrl=options.baseUrl;}_createClass(Api,[{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers}).then(this._checkResult);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'GET',headers:this.headers}).then(this._checkResult);}},{key:\"setUserInfo\",value:function setUserInfo(newName,newAbout){return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this.headers,body:JSON.stringify({name:newName,about:newAbout})}).then(this._checkResult);}},{key:\"updateAvatarImage\",value:function updateAvatarImage(data){return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this.headers,body:JSON.stringify(data)}).then(this._checkResult);}},{key:\"addCard\",value:function addCard(name,link){return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:this.headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResult);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this.headers}).then(this._checkResult);}},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this.headers}).then(this._checkResult);}},{key:\"removeLike\",value:function removeLike(cardId){return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this.headers}).then(this._checkResult);}},{key:\"_checkResult\",value:function _checkResult(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this.addLike(cardId);}else{return this.removeLike(cardId);}}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-20',headers:{authorization:'dc63b407-867c-4698-ab85-c3ed97052e84','Content-type':'application/json'}});export default api;// fetch('https://mesto.nomoreparties.co/v1/cohort-20/cards', {\n//         headers: {\n//             authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84'\n//         }\n//     })\n//     .then(res => res.json())\n//     .then((result) => {\n//         console.log(result);\n//     });","map":{"version":3,"sources":["/home/timakov/react-mesto-auth/src/utils/api.js"],"names":["Api","options","headers","baseUrl","fetch","then","_checkResult","method","newName","newAbout","body","JSON","stringify","name","about","data","link","cardId","res","ok","json","Promise","reject","status","isLiked","addLike","removeLike","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n    constructor(options) {\n        this.headers = options.headers;\n        this.baseUrl = options.baseUrl;\n    }\n\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n                headers: this.headers\n            })\n            .then(this._checkResult)\n    }\n\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n                method: 'GET',\n                headers: this.headers\n            })\n            .then(this._checkResult)\n\n    }\n\n    setUserInfo(newName, newAbout) {\n        return fetch(`${this.baseUrl}/users/me`, {\n                method: \"PATCH\",\n                headers: this.headers,\n                body: JSON.stringify({\n                    name: newName,\n                    about: newAbout\n                })\n            })\n            .then(this._checkResult)\n\n    }\n\n    updateAvatarImage(data) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n                method: 'PATCH',\n                headers: this.headers,\n                body: JSON.stringify(data)\n            })\n            .then(this._checkResult)\n\n    }\n\n    addCard(name, link) {\n        return fetch(`${this.baseUrl}/cards`, {\n                method: 'POST',\n                headers: this.headers,\n                body: JSON.stringify({\n                    name: name,\n                    link: link\n                })\n\n            })\n            .then(this._checkResult)\n\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n\n            })\n            .then(this._checkResult)\n\n    }\n\n    addLike(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers,\n            })\n            .then(this._checkResult)\n\n    }\n    removeLike(cardId) {\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n\n            })\n            .then(this._checkResult)\n\n    }\n\n    _checkResult(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    };\n\n\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.addLike(cardId)\n        } else {\n            return this.removeLike(cardId)\n        }\n    };\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n    headers: {\n        authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84',\n        'Content-type': 'application/json'\n    }\n});\n\nexport default api;\n\n\n\n\n// fetch('https://mesto.nomoreparties.co/v1/cohort-20/cards', {\n//         headers: {\n//             authorization: 'dc63b407-867c-4698-ab85-c3ed97052e84'\n//         }\n//     })\n//     .then(res => res.json())\n//     .then((result) => {\n//         console.log(result);\n//     });"]},"metadata":{},"sourceType":"module"}